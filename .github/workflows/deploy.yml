name: Deploy bot to server (Docker Compose)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

concurrency:
  group: deploy-conduction-content-bot
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy repo to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          source: "."
          target: "/opt/conduction-content-bot"
          overwrite: true

      - name: Configure and restart with Docker Compose
        uses: appleboy/ssh-action@v1.0.3
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SLACK_APP_TOKEN: ${{ secrets.SLACK_APP_TOKEN }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          OPENAI_MODEL: ${{ vars.OPENAI_MODEL || 'gpt-5-mini' }}
          OPENAI_TIMEOUT_SECONDS: ${{ vars.OPENAI_TIMEOUT_SECONDS || '30' }}
          OPENAI_MAX_RETRIES: ${{ vars.OPENAI_MAX_RETRIES || '3' }}
          LLM_BACKOFF_BASE_SECONDS: ${{ vars.LLM_BACKOFF_BASE_SECONDS || '1.0' }}
          LLM_BACKOFF_MAX_SECONDS: ${{ vars.LLM_BACKOFF_MAX_SECONDS || '15.0' }}
          HISTORY_MAX_MESSAGES: ${{ vars.HISTORY_MAX_MESSAGES || '10' }}
          WEBSITE_BASE_URL: ${{ vars.WEBSITE_BASE_URL || 'https://conduction.nl' }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            set -euo pipefail
            cd /opt/conduction-content-bot

            # Write .env from GitHub Secrets/Variables (not committed to repo)
            cat > .env << EOF
            OPENAI_API_KEY=${OPENAI_API_KEY}
            SLACK_APP_TOKEN=${SLACK_APP_TOKEN}
            SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
            OPENAI_MODEL=${OPENAI_MODEL}
            OPENAI_TIMEOUT_SECONDS=${OPENAI_TIMEOUT_SECONDS}
            OPENAI_MAX_RETRIES=${OPENAI_MAX_RETRIES}
            LLM_BACKOFF_BASE_SECONDS=${LLM_BACKOFF_BASE_SECONDS}
            LLM_BACKOFF_MAX_SECONDS=${LLM_BACKOFF_MAX_SECONDS}
            HISTORY_MAX_MESSAGES=${HISTORY_MAX_MESSAGES}
            WEBSITE_BASE_URL=${WEBSITE_BASE_URL}
            EOF

            # Ensure Docker and Compose are available
            docker --version
            docker compose version

            # Build and start (restart policy is set in docker-compose.yml)
            docker compose down || true
            docker compose up -d --build

            # Show status
            docker compose ps

